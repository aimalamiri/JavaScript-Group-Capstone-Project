(self.webpackChunkJavaScript_Capstone_Project=self.webpackChunkJavaScript_Capstone_Project||[]).push([[179],{757:(n,A,t)=>{n.exports=t(666)},150:(n,A,t)=>{"use strict";function e(n,A,t,e,r,o,i){try{var a=n[o](i),c=a.value}catch(n){return void t(n)}a.done?A(c):Promise.resolve(c).then(e,r)}function r(n){return function(){var A=this,t=arguments;return new Promise((function(r,o){var i=n.apply(A,t);function a(n){e(i,r,o,a,c,"next",n)}function c(n){e(i,r,o,a,c,"throw",n)}a(void 0)}))}}var o=t(757),i=t.n(o),a=t(379),c=t.n(a),s=t(795),d=t.n(s),l=t(569),u=t.n(l),p=t(565),m=t.n(p),h=t(216),f=t.n(h),g=t(589),E=t.n(g),w=t(345),b={};function y(n,A){for(var t=0;t<A.length;t++){var e=A[t];e.enumerable=e.enumerable||!1,e.configurable=!0,"value"in e&&(e.writable=!0),Object.defineProperty(n,e.key,e)}}function B(n,A,t){return A&&y(n.prototype,A),t&&y(n,t),Object.defineProperty(n,"prototype",{writable:!1}),n}function v(n,A){if(!(n instanceof A))throw new TypeError("Cannot call a class as a function")}function x(n,A,t){return A in n?Object.defineProperty(n,A,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[A]=t,n}b.styleTagTransform=E(),b.setAttributes=m(),b.insert=u().bind(null,"head"),b.domAPI=d(),b.insertStyleElement=f(),c()(w.Z,b),w.Z&&w.Z.locals&&w.Z.locals;var C="nXk0TDmCqauUBbCpWPOR";const k=new(B((function n(){var A=this;v(this,n),x(this,"getCategories",(function(){return fetch("".concat(A.baseUrl,"/categories.php")).then((function(n){return n.json()})).then((function(n){return n.categories})).catch((function(n){throw n}))})),x(this,"getByCategory",(function(n){return fetch("".concat(A.baseUrl,"/filter.php?c=").concat(n)).then((function(n){return n.json()})).then((function(n){return n.meals})).catch((function(n){throw n}))})),x(this,"getMeal",(function(n){return fetch("".concat(A.baseUrl,"/lookup.php?i=").concat(n)).then((function(n){return n.json()})).then((function(n){return n.meals})).then((function(n){return n.length?n[0]:{}})).catch((function(n){throw n}))})),x(this,"createApp",r(i().mark((function n(){return i().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return n.abrupt("return",fetch("".concat(A.involvementUrl,"/apps/"),{method:"POST",body:"",headers:{"Content-type":"application/json; charset=UTF-8"}}).then((function(n){return n.text()})).catch((function(n){throw n})));case 1:case"end":return n.stop()}}),n)})))),x(this,"addLike",function(){var n=r(i().mark((function n(t,e){return i().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return n.abrupt("return",fetch("".concat(A.involvementUrl,"/apps/").concat(t,"/likes/"),{method:"POST",body:JSON.stringify({item_id:e}),headers:{"Content-type":"application/json; charset=UTF-8"}}).then((function(n){return n.text()})).catch((function(n){throw n})));case 1:case"end":return n.stop()}}),n)})));return function(A,t){return n.apply(this,arguments)}}()),x(this,"getLikes",(function(n){return fetch("".concat(A.involvementUrl,"/apps/").concat(n,"/likes/")).then((function(n){return Number(n.headers.get("content-length"))>0?n.json():[]})).catch((function(n){throw n}))})),x(this,"getComments",function(){var n=r(i().mark((function n(t){var e;return i().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return n.next=2,fetch("".concat(A.involvementUrl,"/apps/").concat(A.involvementKey,"/comments?item_id=").concat(t)).then((function(n){e=n.json(),n.ok||(e=[])})).catch((function(n){return n}));case 2:return n.abrupt("return",e);case 3:case"end":return n.stop()}}),n)})));return function(A){return n.apply(this,arguments)}}()),x(this,"addComment",function(){var n=r(i().mark((function n(t,e){var r;return i().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return n.next=2,fetch("".concat(A.involvementUrl,"/apps/").concat(A.involvementKey,"/comments/"),{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({item_id:t,username:e.username,comment:e.comment})}).then((function(n){return n.json()})).catch((function(n){return n}));case 2:return r=n.sent,n.abrupt("return",r);case 4:case"end":return n.stop()}}),n)})));return function(A,t){return n.apply(this,arguments)}}()),this.baseUrl="https://www.themealdb.com/api/json/v1/1",this.involvementUrl="https://us-central1-involvement-api.cloudfunctions.net/capstoneApi",this.involvementKey=C})));var D=t(572),F=t.n(D);function z(n,A){var t=function(n,A,t){if(!A.has(n))throw new TypeError("attempted to get private field on non-instance");return A.get(n)}(n,A);return function(n,A){return A.get?A.get.call(n):A.value}(n,t)}var M=t(134),I=t.n(M);var S=new WeakMap,L=function(){function n(A){var t,e,o,a,c=this;v(this,n),e=this,o=S,a={writable:!0,value:(t=r(i().mark((function n(){var A;return i().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return n.next=2,k.getComments(c.data.idMeal);case 2:A=n.sent,I()(A);case 4:case"end":return n.stop()}}),n)}))),function(){return t.apply(this,arguments)})},function(n,A){if(A.has(n))throw new TypeError("Cannot initialize the same private elements twice on an object")}(e,o),o.set(e,a),this.data=A,this.element=document.querySelector("#modal")}return B(n,[{key:"load",value:function(){var n=this,A=function(A,t,e){n.element.querySelector("#modal-".concat(A))[null!=e?e:"textContent"]=n.data[t]},t=this.element.querySelector("#modal-ingredients");t.innerHTML="";for(var e=1;e<=20;e+=1)if(""!==this.data["strIngredient".concat(e)]){var o='<li class="badge">'.concat(this.data["strIngredient".concat(e)],"</li>");t.innerHTML+=o}z(this,S).call(this),A("title","strMeal"),A("image","strMealThumb","src"),A("video","strYoutube","href"),A("source","strSource","href"),A("instruction","strInstructions"),A("area","strArea"),A("category","strCategory");var a=this.element.querySelector("#modal-comment-form");a.addEventListener("submit",function(){var A=r(i().mark((function A(t){var e,r;return i().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:if(t.preventDefault(),e=(n.element.querySelector("#modal-input-name").value||"").trim(),r=(n.element.querySelector("#modal-input-comment").value||"").trim(),""===e||""===r){A.next=8;break}return A.next=6,k.addComment(n.data.idMeal,{username:e,comment:r});case 6:a.reset(),z(n,S).call(n);case 8:case"end":return A.stop()}}),A)})));return function(n){return A.apply(this,arguments)}}())}},{key:"open",value:function(){this.element.classList.remove("hidden"),this.load()}}]),n}();const j=new(B((function n(){var A=this;v(this,n),x(this,"setup",r(i().mark((function n(){return i().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return n.next=2,A.showList();case 2:if(n.t0=C,n.t0){n.next=7;break}return n.next=6,k.createApp();case 6:n.t0=n.sent;case 7:return A.idApp=n.t0,n.next=10,A.showLikes();case 10:case"end":return n.stop()}}),n)})))),x(this,"openComments",function(){var n=r(i().mark((function n(A){var t,e;return i().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return t=A.target.closest("li").dataset.mealId,n.next=3,k.getMeal(t);case 3:e=n.sent,new L(e).open();case 6:case"end":return n.stop()}}),n)})));return function(A){return n.apply(this,arguments)}}()),x(this,"addLike",function(){var n=r(i().mark((function n(t){var e,r,o,a;return i().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return e=t.target,r=e.closest("li").closest("li"),o=r.dataset.mealId,n.next=5,k.addLike(A.idApp,o);case 5:return n.next=7,k.getLikes(A.idApp);case 7:return a=n.sent,n.next=10,A.showLike(r,a);case 10:case"end":return n.stop()}}),n)})));return function(A){return n.apply(this,arguments)}}()),x(this,"showMealCount",(function(){return F()()})),x(this,"showItem",function(){var n=r(i().mark((function n(t,e){var r;return i().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:r='<li class="card" data-meal-id="'.concat(e.idMeal,'">\n      <div class="card-content">\n        <div class="meal">\n          <img src="').concat(e.strMealThumb,'/preview" alt="').concat(e.strMeal,' image" class="dish-img">\n          <div class="description">\n            <span class="dish-name">').concat(e.strMeal,'</span>\n            <span class="likes-row">\n              <div class="likes-btn"><i class="fa-regular fa-heart"></i></div>\n              <div class="likes">n likes</div>\n            </span>\n          </div>\n        </div>\n        <div class="buttons">\n          <button type="button" class="main-btn meal-comment">\n            Comments &nbsp; <i class="fa-regular fa-comment"></i>\n          </button>\n          <button type="button" class="main-btn hide-in-mobile" disabled>\n            Reservations &nbsp; <i class="fa-regular fa-calendar"></i>\n          </button>\n        </div>\n      </div>\n    </li>'),t.insertAdjacentHTML("beforeend",r),t.lastChild.querySelector("button").addEventListener("click",A.openComments),t.lastChild.querySelector("i").addEventListener("click",A.addLike);case 6:case"end":return n.stop()}}),n)})));return function(A,t){return n.apply(this,arguments)}}()),x(this,"showList",r(i().mark((function n(){var t,e;return i().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return n.next=2,k.getByCategory("Chicken");case 2:t=n.sent,e=document.querySelector("#item-list"),t.forEach((function(n){A.showItem(e,n)})),A.showMealCount();case 6:case"end":return n.stop()}}),n)})))),x(this,"showLike",function(){var n=r(i().mark((function n(A,t){var e,r,o,a;return i().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:e=A,"LI"===A.nodeName&&(e=A.querySelector(".likes")),r=e.closest("li").dataset.mealId,o=t.find((function(n){return n.item_id===r}))||{},a=o.likes||0,e.textContent="".concat(a," Likes");case 6:case"end":return n.stop()}}),n)})));return function(A,t){return n.apply(this,arguments)}}()),x(this,"showLikes",r(i().mark((function n(){var t;return i().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return n.next=2,k.getLikes(A.idApp);case 2:t=n.sent,document.querySelector("#item-list").querySelectorAll(".likes").forEach((function(n){A.showLike(n,t)}));case 6:case"end":return n.stop()}}),n)}))))})));window.onload=r(i().mark((function n(){return i().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return n.next=2,j.setup();case 2:case"end":return n.stop()}}),n)}))),document.querySelector("#close-modal").addEventListener("click",(function(){document.querySelector("#modal").classList.add("hidden")}))},134:n=>{n.exports=function(n){var A=document.querySelector("#modal-comments-count"),t=document.querySelector("#modal-comments");t.innerHTML="",n.length>0?(A.innerHTML=n.length,n.forEach((function(n){var A='\n      <li class="comment">\n        <span class="text-gray-500 text-xs">'.concat(n.creation_date,'</span>\n        <span class="text-gray-700 font-bold">').concat(n.username,':</span>\n        <span class="text-gray-900">').concat(n.comment,"</span>\n      </li>\n      ");t.innerHTML+=A}))):A.innerHTML="No"}},572:n=>{n.exports=function(){var n=document.querySelector("#item-list").children.length;return document.querySelector("#meals-count").innerHTML="Our menu has <strong>".concat(n,"</strong> options"),n}},345:(n,A,t)=>{"use strict";t.d(A,{Z:()=>u});var e=t(537),r=t.n(e),o=t(645),i=t.n(o),a=t(667),c=t.n(a),s=new URL(t(702),t.b),d=i()(r()),l=c()(s);d.push([n.id,'/*\n! tailwindcss v3.0.24 | MIT License | https://tailwindcss.com\n*//*\n1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)\n2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)\n*/\n\n*,\n::before,\n::after {\n  box-sizing: border-box; /* 1 */\n  border-width: 0; /* 2 */\n  border-style: solid; /* 2 */\n  border-color: #e5e7eb; /* 2 */\n}\n\n::before,\n::after {\n  --tw-content: \'\';\n}\n\n/*\n1. Use a consistent sensible line-height in all browsers.\n2. Prevent adjustments of font size after orientation changes in iOS.\n3. Use a more readable tab size.\n4. Use the user\'s configured `sans` font-family by default.\n*/\n\nhtml {\n  line-height: 1.5; /* 1 */\n  -webkit-text-size-adjust: 100%; /* 2 */\n  -moz-tab-size: 4; /* 3 */\n  -o-tab-size: 4;\n     tab-size: 4; /* 3 */\n  font-family: ui-sans-serif, system-ui, -apple-system, Segoe UI, Roboto, Ubuntu, Cantarell, Noto Sans, sans-serif, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji"; /* 4 */\n}\n\n/*\n1. Remove the margin in all browsers.\n2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.\n*/\n\nbody {\n  margin: 0; /* 1 */\n  line-height: inherit; /* 2 */\n}\n\n/*\n1. Add the correct height in Firefox.\n2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)\n3. Ensure horizontal rules are visible by default.\n*/\n\nhr {\n  height: 0; /* 1 */\n  color: inherit; /* 2 */\n  border-top-width: 1px; /* 3 */\n}\n\n/*\nAdd the correct text decoration in Chrome, Edge, and Safari.\n*/\n\nabbr:where([title]) {\n  -webkit-text-decoration: underline dotted;\n          text-decoration: underline dotted;\n}\n\n/*\nRemove the default font size and weight for headings.\n*/\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  font-size: inherit;\n  font-weight: inherit;\n}\n\n/*\nReset links to optimize for opt-in styling instead of opt-out.\n*/\n\na {\n  color: inherit;\n  text-decoration: inherit;\n}\n\n/*\nAdd the correct font weight in Edge and Safari.\n*/\n\nb,\nstrong {\n  font-weight: bolder;\n}\n\n/*\n1. Use the user\'s configured `mono` font family by default.\n2. Correct the odd `em` font sizing in all browsers.\n*/\n\ncode,\nkbd,\nsamp,\npre {\n  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/*\nAdd the correct font size in all browsers.\n*/\n\nsmall {\n  font-size: 80%;\n}\n\n/*\nPrevent `sub` and `sup` elements from affecting the line height in all browsers.\n*/\n\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\nsub {\n  bottom: -0.25em;\n}\n\nsup {\n  top: -0.5em;\n}\n\n/*\n1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)\n2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)\n3. Remove gaps between table borders by default.\n*/\n\ntable {\n  text-indent: 0; /* 1 */\n  border-color: inherit; /* 2 */\n  border-collapse: collapse; /* 3 */\n}\n\n/*\n1. Change the font styles in all browsers.\n2. Remove the margin in Firefox and Safari.\n3. Remove default padding in all browsers.\n*/\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font-family: inherit; /* 1 */\n  font-size: 100%; /* 1 */\n  line-height: inherit; /* 1 */\n  color: inherit; /* 1 */\n  margin: 0; /* 2 */\n  padding: 0; /* 3 */\n}\n\n/*\nRemove the inheritance of text transform in Edge and Firefox.\n*/\n\nbutton,\nselect {\n  text-transform: none;\n}\n\n/*\n1. Correct the inability to style clickable types in iOS and Safari.\n2. Remove default button styles.\n*/\n\nbutton,\n[type=\'button\'],\n[type=\'reset\'],\n[type=\'submit\'] {\n  -webkit-appearance: button; /* 1 */\n  background-color: transparent; /* 2 */\n  background-image: none; /* 2 */\n}\n\n/*\nUse the modern Firefox focus style for all focusable elements.\n*/\n\n:-moz-focusring {\n  outline: auto;\n}\n\n/*\nRemove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)\n*/\n\n:-moz-ui-invalid {\n  box-shadow: none;\n}\n\n/*\nAdd the correct vertical alignment in Chrome and Firefox.\n*/\n\nprogress {\n  vertical-align: baseline;\n}\n\n/*\nCorrect the cursor style of increment and decrement buttons in Safari.\n*/\n\n::-webkit-inner-spin-button,\n::-webkit-outer-spin-button {\n  height: auto;\n}\n\n/*\n1. Correct the odd appearance in Chrome and Safari.\n2. Correct the outline style in Safari.\n*/\n\n[type=\'search\'] {\n  -webkit-appearance: textfield; /* 1 */\n  outline-offset: -2px; /* 2 */\n}\n\n/*\nRemove the inner padding in Chrome and Safari on macOS.\n*/\n\n::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n/*\n1. Correct the inability to style clickable types in iOS and Safari.\n2. Change font properties to `inherit` in Safari.\n*/\n\n::-webkit-file-upload-button {\n  -webkit-appearance: button; /* 1 */\n  font: inherit; /* 2 */\n}\n\n/*\nAdd the correct display in Chrome and Safari.\n*/\n\nsummary {\n  display: list-item;\n}\n\n/*\nRemoves the default spacing and border for appropriate elements.\n*/\n\nblockquote,\ndl,\ndd,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\nhr,\nfigure,\np,\npre {\n  margin: 0;\n}\n\nfieldset {\n  margin: 0;\n  padding: 0;\n}\n\nlegend {\n  padding: 0;\n}\n\nol,\nul,\nmenu {\n  list-style: none;\n  margin: 0;\n  padding: 0;\n}\n\n/*\nPrevent resizing textareas horizontally by default.\n*/\n\ntextarea {\n  resize: vertical;\n}\n\n/*\n1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)\n2. Set the default placeholder color to the user\'s configured gray 400 color.\n*/\n\ninput::-moz-placeholder, textarea::-moz-placeholder {\n  opacity: 1; /* 1 */\n  color: #9ca3af; /* 2 */\n}\n\ninput:-ms-input-placeholder, textarea:-ms-input-placeholder {\n  opacity: 1; /* 1 */\n  color: #9ca3af; /* 2 */\n}\n\ninput::placeholder,\ntextarea::placeholder {\n  opacity: 1; /* 1 */\n  color: #9ca3af; /* 2 */\n}\n\n/*\nSet the default cursor for buttons.\n*/\n\nbutton,\n[role="button"] {\n  cursor: pointer;\n}\n\n/*\nMake sure disabled buttons don\'t get the pointer cursor.\n*/\n:disabled {\n  cursor: default;\n}\n\n/*\n1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)\n2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)\n   This can trigger a poorly considered lint error in some tools but is included by design.\n*/\n\nimg,\nsvg,\nvideo,\ncanvas,\naudio,\niframe,\nembed,\nobject {\n  display: block; /* 1 */\n  vertical-align: middle; /* 2 */\n}\n\n/*\nConstrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)\n*/\n\nimg,\nvideo {\n  max-width: 100%;\n  height: auto;\n}\n\n/*\nEnsure the default browser behavior of the `hidden` attribute.\n*/\n\n[hidden] {\n  display: none;\n}\n\n*, ::before, ::after {\n  --tw-translate-x: 0;\n  --tw-translate-y: 0;\n  --tw-rotate: 0;\n  --tw-skew-x: 0;\n  --tw-skew-y: 0;\n  --tw-scale-x: 1;\n  --tw-scale-y: 1;\n  --tw-pan-x:  ;\n  --tw-pan-y:  ;\n  --tw-pinch-zoom:  ;\n  --tw-scroll-snap-strictness: proximity;\n  --tw-ordinal:  ;\n  --tw-slashed-zero:  ;\n  --tw-numeric-figure:  ;\n  --tw-numeric-spacing:  ;\n  --tw-numeric-fraction:  ;\n  --tw-ring-inset:  ;\n  --tw-ring-offset-width: 0px;\n  --tw-ring-offset-color: #fff;\n  --tw-ring-color: rgba(59, 130, 246, 0.5);\n  --tw-ring-offset-shadow: 0 0 rgba(0,0,0,0);\n  --tw-ring-shadow: 0 0 rgba(0,0,0,0);\n  --tw-shadow: 0 0 rgba(0,0,0,0);\n  --tw-shadow-colored: 0 0 rgba(0,0,0,0);\n  --tw-blur:  ;\n  --tw-brightness:  ;\n  --tw-contrast:  ;\n  --tw-grayscale:  ;\n  --tw-hue-rotate:  ;\n  --tw-invert:  ;\n  --tw-saturate:  ;\n  --tw-sepia:  ;\n  --tw-drop-shadow:  ;\n  --tw-backdrop-blur:  ;\n  --tw-backdrop-brightness:  ;\n  --tw-backdrop-contrast:  ;\n  --tw-backdrop-grayscale:  ;\n  --tw-backdrop-hue-rotate:  ;\n  --tw-backdrop-invert:  ;\n  --tw-backdrop-opacity:  ;\n  --tw-backdrop-saturate:  ;\n  --tw-backdrop-sepia:  ;\n}\n.container {\n  width: 100%;\n}\n@media (min-width: 640px) {\n\n  .container {\n    max-width: 640px;\n  }\n}\n@media (min-width: 768px) {\n\n  .container {\n    max-width: 768px;\n  }\n}\n@media (min-width: 1024px) {\n\n  .container {\n    max-width: 1024px;\n  }\n}\n@media (min-width: 1280px) {\n\n  .container {\n    max-width: 1280px;\n  }\n}\n@media (min-width: 1536px) {\n\n  .container {\n    max-width: 1536px;\n  }\n}\n.fixed {\n  position: fixed;\n}\n.absolute {\n  position: absolute;\n}\n.relative {\n  position: relative;\n}\n.inset-0 {\n  top: 0px;\n  right: 0px;\n  bottom: 0px;\n  left: 0px;\n}\n.bottom-0 {\n  bottom: 0px;\n}\n.z-10 {\n  z-index: 10;\n}\n.my-4 {\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n}\n.-mx-4 {\n  margin-left: -1rem;\n  margin-right: -1rem;\n}\n.mx-auto {\n  margin-left: auto;\n  margin-right: auto;\n}\n.my-2 {\n  margin-top: 0.5rem;\n  margin-bottom: 0.5rem;\n}\n.mb-2 {\n  margin-bottom: 0.5rem;\n}\n.mt-2 {\n  margin-top: 0.5rem;\n}\n.mt-3 {\n  margin-top: 0.75rem;\n}\n.flex {\n  display: flex;\n}\n.hidden {\n  display: none;\n}\n.h-72 {\n  height: 18rem;\n}\n.max-h-36 {\n  max-height: 9rem;\n}\n.min-h-full {\n  min-height: 100%;\n}\n.w-full {\n  width: 100%;\n}\n.w-5\\/6 {\n  width: 83.333333%;\n}\n.list-none {\n  list-style-type: none;\n}\n.flex-wrap {\n  flex-wrap: wrap;\n}\n.items-start {\n  align-items: flex-start;\n}\n.items-end {\n  align-items: flex-end;\n}\n.items-center {\n  align-items: center;\n}\n.justify-center {\n  justify-content: center;\n}\n.justify-between {\n  justify-content: space-between;\n}\n.gap-2 {\n  gap: 0.5rem;\n}\n.gap-1 {\n  gap: 0.25rem;\n}\n.overflow-y-auto {\n  overflow-y: auto;\n}\n.rounded-lg {\n  border-radius: 0.5rem;\n}\n.rounded-t-lg {\n  border-top-left-radius: 0.5rem;\n  border-top-right-radius: 0.5rem;\n}\n.border-t {\n  border-top-width: 1px;\n}\n.bg-gray-50 {\n  --tw-bg-opacity: 1;\n  background-color: rgba(249, 250, 251, var(--tw-bg-opacity));\n}\n.bg-white {\n  --tw-bg-opacity: 1;\n  background-color: rgba(255, 255, 255, var(--tw-bg-opacity));\n}\n.bg-gray-500 {\n  --tw-bg-opacity: 1;\n  background-color: rgba(107, 114, 128, var(--tw-bg-opacity));\n}\n.bg-gray-100 {\n  --tw-bg-opacity: 1;\n  background-color: rgba(243, 244, 246, var(--tw-bg-opacity));\n}\n.bg-opacity-75 {\n  --tw-bg-opacity: 0.75;\n}\n.p-4 {\n  padding: 1rem;\n}\n.p-3 {\n  padding: 0.75rem;\n}\n.py-2 {\n  padding-top: 0.5rem;\n  padding-bottom: 0.5rem;\n}\n.py-8 {\n  padding-top: 2rem;\n  padding-bottom: 2rem;\n}\n.text-left {\n  text-align: left;\n}\n.text-center {\n  text-align: center;\n}\n.text-lg {\n  font-size: 1.125rem;\n  line-height: 1.75rem;\n}\n.text-sm {\n  font-size: 0.875rem;\n  line-height: 1.25rem;\n}\n.font-semibold {\n  font-weight: 600;\n}\n.font-bold {\n  font-weight: 700;\n}\n.text-gray-600 {\n  --tw-text-opacity: 1;\n  color: rgba(75, 85, 99, var(--tw-text-opacity));\n}\n.shadow {\n  --tw-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px -1px rgba(0, 0, 0, 0.1);\n  --tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);\n  box-shadow: 0 0 rgba(0,0,0,0), 0 0 rgba(0,0,0,0), var(--tw-shadow);\n  box-shadow: 0 0 rgba(0,0,0,0), 0 0 rgba(0,0,0,0), var(--tw-shadow);\n  box-shadow: var(--tw-ring-offset-shadow, 0 0 rgba(0,0,0,0)), var(--tw-ring-shadow, 0 0 rgba(0,0,0,0)), var(--tw-shadow);\n}\n.shadow-inner {\n  --tw-shadow: inset 0 2px 4px 0 rgba(0, 0, 0, 0.05);\n  --tw-shadow-colored: inset 0 2px 4px 0 var(--tw-shadow-color);\n  box-shadow: 0 0 rgba(0,0,0,0), 0 0 rgba(0,0,0,0), var(--tw-shadow);\n  box-shadow: 0 0 rgba(0,0,0,0), 0 0 rgba(0,0,0,0), var(--tw-shadow);\n  box-shadow: var(--tw-ring-offset-shadow, 0 0 rgba(0,0,0,0)), var(--tw-ring-shadow, 0 0 rgba(0,0,0,0)), var(--tw-shadow);\n}\n.transition-opacity {\n  transition-property: opacity;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n  transition-duration: 150ms;\n}\n\nbody {\n  position: relative;\n  min-height: 100vh;\n}\n\n.container {\n  margin-left: auto;\n  margin-right: auto;\n  padding-left: 2rem;\n  padding-right: 2rem;\n}\n\n@media (min-width: 768px) {\n\n  .container {\n    padding-left: 6rem;\n    padding-right: 6rem;\n  }\n}\n\n.link {\n  --tw-text-opacity: 1;\n  color: rgba(37, 99, 235, var(--tw-text-opacity));\n  transition-property: all;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n  transition-duration: 200ms;\n}\n\n.link:hover {\n  --tw-text-opacity: 1;\n  color: rgba(59, 130, 246, var(--tw-text-opacity));\n}\n\n.main-header {\n  display: flex;\n  width: 100%;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n}\n\n.badge {\n  border-radius: 0.75rem;\n  --tw-bg-opacity: 1;\n  background-color: rgba(59, 130, 246, var(--tw-bg-opacity));\n  padding-top: 0.25rem;\n  padding-bottom: 0.25rem;\n  padding-left: 0.5rem;\n  padding-right: 0.5rem;\n  font-size: 0.75rem;\n  line-height: 1rem;\n  --tw-text-opacity: 1;\n  color: rgba(255, 255, 255, var(--tw-text-opacity));\n}\n\n.logo {\n  background: url('+l+") no-repeat center center;\n  height: 4rem;\n  width: 5rem;\n  background-size: contain;\n}\n\n@media (min-width: 768px) {\n\n  .logo {\n    height: 5rem;\n  }\n}\n\n.card {\n  width: 100%;\n  padding: 0.5rem;\n}\n\n@media (min-width: 768px) {\n\n  .card {\n    width: 50%;\n  }\n}\n\n@media (min-width: 1024px) {\n\n  .card {\n    width: 33.333333%;\n    padding: 1rem;\n  }\n}\n\n.card-content {\n  display: flex;\n  width: 100%;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: space-between;\n  border-radius: 0.75rem;\n  --tw-bg-opacity: 1;\n  background-color: rgba(255, 255, 255, var(--tw-bg-opacity));\n  padding: 0.5rem;\n  --tw-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px -1px rgba(0, 0, 0, 0.1);\n  --tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);\n  box-shadow: 0 0 rgba(0,0,0,0), 0 0 rgba(0,0,0,0), var(--tw-shadow);\n  box-shadow: 0 0 rgba(0,0,0,0), 0 0 rgba(0,0,0,0), var(--tw-shadow);\n  box-shadow: var(--tw-ring-offset-shadow, 0 0 rgba(0,0,0,0)), var(--tw-ring-shadow, 0 0 rgba(0,0,0,0)), var(--tw-shadow);\n}\n\n@media (min-width: 768px) {\n\n  .card-content {\n    padding: 1rem;\n  }\n}\n\n@media (min-width: 1024px) {\n\n  .card-content {\n    padding: 1.5rem;\n  }\n}\n\n.description {\n  margin-left: 0.5rem;\n  width: 100%;\n}\n\n@media (min-width: 1024px) {\n\n  .description {\n    margin-left: 1rem;\n  }\n}\n\n.dish-img {\n  height: 6rem;\n  width: 6rem;\n  border-radius: 0.5rem;\n  -o-object-fit: cover;\n     object-fit: cover;\n}\n\n@media (min-width: 1024px) {\n\n  .dish-img {\n    height: 8rem;\n    width: 8rem;\n  }\n}\n\n.dish-name {\n  width: 100%;\n  font-size: 0.875rem;\n  line-height: 1.25rem;\n  font-weight: 700;\n}\n\n@media (min-width: 1024px) {\n\n  .dish-name {\n    font-size: 1rem;\n    line-height: 1.5rem;\n  }\n}\n\n.likes {\n  display: flex;\n  align-items: center;\n}\n\n.likes-btn {\n  padding-right: 0.5rem;\n  font-size: 1.875rem;\n  line-height: .75rem;\n  transition-property: all;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n  transition-duration: 150ms;\n  transition-delay: 150ms;\n  transition-timing-function: cubic-bezier(0.4, 0, 1, 1);\n}\n\n.likes-btn:hover {\n  --tw-text-opacity: 1;\n  color: rgba(239, 68, 68, var(--tw-text-opacity));\n}\n\n.likes-row {\n  display: flex;\n  align-items: center;\n  padding-top: 1rem;\n}\n\n.meal {\n  margin-bottom: 1rem;\n  display: flex;\n  width: 100%;\n  flex-direction: row;\n}\n\n.comment {\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  gap: 0.5rem;\n}\n\n.main-btn {\n  border-radius: 0.25rem;\n  --tw-bg-opacity: 1;\n  background-color: rgba(37, 99, 235, var(--tw-bg-opacity));\n  padding-left: 0.5rem;\n  padding-right: 0.5rem;\n  padding-top: 0.25rem;\n  padding-bottom: 0.25rem;\n  font-size: 0.75rem;\n  line-height: 1rem;\n  --tw-text-opacity: 1;\n  color: rgba(255, 255, 255, var(--tw-text-opacity));\n}\n\n.main-btn:hover {\n  --tw-bg-opacity: 1;\n  background-color: rgba(59, 130, 246, var(--tw-bg-opacity));\n}\n\n.main-btn:disabled {\n  cursor: not-allowed;\n  --tw-bg-opacity: 1;\n  background-color: rgba(229, 231, 235, var(--tw-bg-opacity));\n  --tw-text-opacity: 1;\n  color: rgba(0, 0, 0, var(--tw-text-opacity));\n}\n\n@media (min-width: 1280px) {\n\n  .main-btn {\n    font-size: 1rem;\n    line-height: 1.5rem;\n  }\n}\n\n.buttons {\n  display: flex;\n  width: 100%;\n  align-items: center;\n  justify-content: space-between;\n}\n\n.input {\n  margin-top: 0.5rem;\n  width: 100%;\n  border-radius: 0.25rem;\n  border-width: 2px;\n  --tw-border-opacity: 1;\n  border-color: rgba(186, 230, 253, var(--tw-border-opacity));\n  padding: 0.5rem;\n  --tw-shadow: inset 0 2px 4px 0 rgba(0, 0, 0, 0.05);\n  --tw-shadow-colored: inset 0 2px 4px 0 var(--tw-shadow-color);\n  box-shadow: 0 0 rgba(0,0,0,0), 0 0 rgba(0,0,0,0), var(--tw-shadow);\n  box-shadow: 0 0 rgba(0,0,0,0), 0 0 rgba(0,0,0,0), var(--tw-shadow);\n  box-shadow: var(--tw-ring-offset-shadow, 0 0 rgba(0,0,0,0)), var(--tw-ring-shadow, 0 0 rgba(0,0,0,0)), var(--tw-shadow);\n  outline: 2px solid transparent;\n  outline-offset: 2px;\n}\n\n.btn {\n  margin-left: auto;\n  border-radius: 0.25rem;\n  --tw-bg-opacity: 1;\n  background-color: rgba(37, 99, 235, var(--tw-bg-opacity));\n  padding-left: 0.5rem;\n  padding-right: 0.5rem;\n  padding-top: 0.25rem;\n  padding-bottom: 0.25rem;\n  --tw-text-opacity: 1;\n  color: rgba(255, 255, 255, var(--tw-text-opacity));\n}\n\n.btn:hover {\n  --tw-bg-opacity: 1;\n  background-color: rgba(59, 130, 246, var(--tw-bg-opacity));\n}\n\n.bottom-filler {\n  height: 105px;\n}\n\n.hide-in-mobile {\n  display: none;\n}\n\n@media (min-width: 1024px) {\n\n  .hide-in-mobile {\n    display: block;\n  }\n}\n\n@media (min-width: 640px) {\n\n  .sm\\:w-4\\/6 {\n    width: 66.666667%;\n  }\n\n  .sm\\:items-center {\n    align-items: center;\n  }\n\n  .sm\\:p-0 {\n    padding: 0px;\n  }\n}\n\n@media (min-width: 1024px) {\n\n  .lg\\:w-3\\/6 {\n    width: 50%;\n  }\n\n  .lg\\:gap-4 {\n    gap: 1rem;\n  }\n\n  .lg\\:p-5 {\n    padding: 1.25rem;\n  }\n\n  .lg\\:pl-5 {\n    padding-left: 1.25rem;\n  }\n\n  .lg\\:text-3xl {\n    font-size: 1.875rem;\n    line-height: 2.25rem;\n  }\n\n  .lg\\:text-xl {\n    font-size: 1.25rem;\n    line-height: 1.75rem;\n  }\n}\n","",{version:3,sources:["webpack://./src/scss/index.scss","<no source>"],names:[],mappings:"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",sourcesContent:['@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\nbody {\n  @apply relative min-h-screen;\n}\n\n.container {\n  @apply md:px-24 px-8 mx-auto;\n}\n\n.link {\n  @apply text-blue-600 hover:text-blue-500 transition-all duration-200;\n}\n\n.main-header {\n  @apply flex flex-row items-center justify-between w-full;\n}\n\n.badge {\n  @apply bg-blue-500 text-white rounded-xl py-1 px-2 text-xs;\n}\n\n.logo {\n  background: url("../images/logo.png") no-repeat center center;\n\n  @apply h-16 md:h-20 w-20 bg-contain;\n}\n\n.card {\n  @apply lg:p-4 p-2 lg:w-4/12 md:w-3/6 w-full;\n}\n\n.card-content {\n  @apply flex flex-col justify-between items-start lg:p-6 md:p-4 p-2 bg-white rounded-xl w-full shadow;\n}\n\n.description {\n  @apply lg:ml-4 ml-2 w-full;\n}\n\n.dish-img {\n  @apply rounded-lg lg:h-32 lg:w-32 h-24 w-24 object-cover;\n}\n\n.dish-name {\n  @apply font-bold w-full lg:text-base text-sm;\n}\n\n.likes {\n  @apply flex items-center;\n}\n\n.likes-btn {\n  @apply pr-2 text-3xl leading-3 hover:text-red-500 transition-all delay-150 ease-in;\n}\n\n.likes-row {\n  @apply flex items-center pt-4;\n}\n\n.meal {\n  @apply flex flex-row mb-4 w-full;\n}\n\n.comment {\n  @apply flex justify-start items-center gap-2;\n}\n\n.main-btn {\n  @apply bg-blue-600 text-white rounded px-2 py-1\n    xl:text-base hover:bg-blue-500 disabled:bg-gray-200\n    disabled:text-black disabled:cursor-not-allowed text-xs;\n}\n\n.buttons {\n  @apply flex items-center justify-between w-full;\n}\n\n.input {\n  @apply w-full rounded shadow-inner border-sky-200 outline-none border-2 p-2 mt-2;\n}\n\n.btn {\n  @apply bg-blue-600 text-white rounded px-2 py-1 ml-auto hover:bg-blue-500;\n}\n\n.bottom-filler {\n  height: 105px;\n}\n\n.hide-in-mobile {\n  @apply hidden lg:block;\n}\n',null],sourceRoot:""}]);const u=d},645:n=>{"use strict";n.exports=function(n){var A=[];return A.toString=function(){return this.map((function(A){var t="",e=void 0!==A[5];return A[4]&&(t+="@supports (".concat(A[4],") {")),A[2]&&(t+="@media ".concat(A[2]," {")),e&&(t+="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {")),t+=n(A),e&&(t+="}"),A[2]&&(t+="}"),A[4]&&(t+="}"),t})).join("")},A.i=function(n,t,e,r,o){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(e)for(var a=0;a<this.length;a++){var c=this[a][0];null!=c&&(i[c]=!0)}for(var s=0;s<n.length;s++){var d=[].concat(n[s]);e&&i[d[0]]||(void 0!==o&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=o),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),r&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=r):d[4]="".concat(r)),A.push(d))}},A}},667:n=>{"use strict";n.exports=function(n,A){return A||(A={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),A.hash&&(n+=A.hash),/["'() \t\n]|(%20)/.test(n)||A.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{"use strict";n.exports=function(n){var A=n[1],t=n[3];if(!t)return A;if("function"==typeof btoa){var e=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(e),o="/*# ".concat(r," */"),i=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[A].concat(i).concat([o]).join("\n")}return[A].join("\n")}},666:n=>{var A=function(n){"use strict";var A,t=Object.prototype,e=t.hasOwnProperty,r="function"==typeof Symbol?Symbol:{},o=r.iterator||"@@iterator",i=r.asyncIterator||"@@asyncIterator",a=r.toStringTag||"@@toStringTag";function c(n,A,t){return Object.defineProperty(n,A,{value:t,enumerable:!0,configurable:!0,writable:!0}),n[A]}try{c({},"")}catch(n){c=function(n,A,t){return n[A]=t}}function s(n,A,t,e){var r=A&&A.prototype instanceof f?A:f,o=Object.create(r.prototype),i=new F(e||[]);return o._invoke=function(n,A,t){var e=l;return function(r,o){if(e===p)throw new Error("Generator is already running");if(e===m){if("throw"===r)throw o;return M()}for(t.method=r,t.arg=o;;){var i=t.delegate;if(i){var a=C(i,t);if(a){if(a===h)continue;return a}}if("next"===t.method)t.sent=t._sent=t.arg;else if("throw"===t.method){if(e===l)throw e=m,t.arg;t.dispatchException(t.arg)}else"return"===t.method&&t.abrupt("return",t.arg);e=p;var c=d(n,A,t);if("normal"===c.type){if(e=t.done?m:u,c.arg===h)continue;return{value:c.arg,done:t.done}}"throw"===c.type&&(e=m,t.method="throw",t.arg=c.arg)}}}(n,t,i),o}function d(n,A,t){try{return{type:"normal",arg:n.call(A,t)}}catch(n){return{type:"throw",arg:n}}}n.wrap=s;var l="suspendedStart",u="suspendedYield",p="executing",m="completed",h={};function f(){}function g(){}function E(){}var w={};c(w,o,(function(){return this}));var b=Object.getPrototypeOf,y=b&&b(b(z([])));y&&y!==t&&e.call(y,o)&&(w=y);var B=E.prototype=f.prototype=Object.create(w);function v(n){["next","throw","return"].forEach((function(A){c(n,A,(function(n){return this._invoke(A,n)}))}))}function x(n,A){function t(r,o,i,a){var c=d(n[r],n,o);if("throw"!==c.type){var s=c.arg,l=s.value;return l&&"object"==typeof l&&e.call(l,"__await")?A.resolve(l.__await).then((function(n){t("next",n,i,a)}),(function(n){t("throw",n,i,a)})):A.resolve(l).then((function(n){s.value=n,i(s)}),(function(n){return t("throw",n,i,a)}))}a(c.arg)}var r;this._invoke=function(n,e){function o(){return new A((function(A,r){t(n,e,A,r)}))}return r=r?r.then(o,o):o()}}function C(n,t){var e=n.iterator[t.method];if(e===A){if(t.delegate=null,"throw"===t.method){if(n.iterator.return&&(t.method="return",t.arg=A,C(n,t),"throw"===t.method))return h;t.method="throw",t.arg=new TypeError("The iterator does not provide a 'throw' method")}return h}var r=d(e,n.iterator,t.arg);if("throw"===r.type)return t.method="throw",t.arg=r.arg,t.delegate=null,h;var o=r.arg;return o?o.done?(t[n.resultName]=o.value,t.next=n.nextLoc,"return"!==t.method&&(t.method="next",t.arg=A),t.delegate=null,h):o:(t.method="throw",t.arg=new TypeError("iterator result is not an object"),t.delegate=null,h)}function k(n){var A={tryLoc:n[0]};1 in n&&(A.catchLoc=n[1]),2 in n&&(A.finallyLoc=n[2],A.afterLoc=n[3]),this.tryEntries.push(A)}function D(n){var A=n.completion||{};A.type="normal",delete A.arg,n.completion=A}function F(n){this.tryEntries=[{tryLoc:"root"}],n.forEach(k,this),this.reset(!0)}function z(n){if(n){var t=n[o];if(t)return t.call(n);if("function"==typeof n.next)return n;if(!isNaN(n.length)){var r=-1,i=function t(){for(;++r<n.length;)if(e.call(n,r))return t.value=n[r],t.done=!1,t;return t.value=A,t.done=!0,t};return i.next=i}}return{next:M}}function M(){return{value:A,done:!0}}return g.prototype=E,c(B,"constructor",E),c(E,"constructor",g),g.displayName=c(E,a,"GeneratorFunction"),n.isGeneratorFunction=function(n){var A="function"==typeof n&&n.constructor;return!!A&&(A===g||"GeneratorFunction"===(A.displayName||A.name))},n.mark=function(n){return Object.setPrototypeOf?Object.setPrototypeOf(n,E):(n.__proto__=E,c(n,a,"GeneratorFunction")),n.prototype=Object.create(B),n},n.awrap=function(n){return{__await:n}},v(x.prototype),c(x.prototype,i,(function(){return this})),n.AsyncIterator=x,n.async=function(A,t,e,r,o){void 0===o&&(o=Promise);var i=new x(s(A,t,e,r),o);return n.isGeneratorFunction(t)?i:i.next().then((function(n){return n.done?n.value:i.next()}))},v(B),c(B,a,"Generator"),c(B,o,(function(){return this})),c(B,"toString",(function(){return"[object Generator]"})),n.keys=function(n){var A=[];for(var t in n)A.push(t);return A.reverse(),function t(){for(;A.length;){var e=A.pop();if(e in n)return t.value=e,t.done=!1,t}return t.done=!0,t}},n.values=z,F.prototype={constructor:F,reset:function(n){if(this.prev=0,this.next=0,this.sent=this._sent=A,this.done=!1,this.delegate=null,this.method="next",this.arg=A,this.tryEntries.forEach(D),!n)for(var t in this)"t"===t.charAt(0)&&e.call(this,t)&&!isNaN(+t.slice(1))&&(this[t]=A)},stop:function(){this.done=!0;var n=this.tryEntries[0].completion;if("throw"===n.type)throw n.arg;return this.rval},dispatchException:function(n){if(this.done)throw n;var t=this;function r(e,r){return a.type="throw",a.arg=n,t.next=e,r&&(t.method="next",t.arg=A),!!r}for(var o=this.tryEntries.length-1;o>=0;--o){var i=this.tryEntries[o],a=i.completion;if("root"===i.tryLoc)return r("end");if(i.tryLoc<=this.prev){var c=e.call(i,"catchLoc"),s=e.call(i,"finallyLoc");if(c&&s){if(this.prev<i.catchLoc)return r(i.catchLoc,!0);if(this.prev<i.finallyLoc)return r(i.finallyLoc)}else if(c){if(this.prev<i.catchLoc)return r(i.catchLoc,!0)}else{if(!s)throw new Error("try statement without catch or finally");if(this.prev<i.finallyLoc)return r(i.finallyLoc)}}}},abrupt:function(n,A){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.tryLoc<=this.prev&&e.call(r,"finallyLoc")&&this.prev<r.finallyLoc){var o=r;break}}o&&("break"===n||"continue"===n)&&o.tryLoc<=A&&A<=o.finallyLoc&&(o=null);var i=o?o.completion:{};return i.type=n,i.arg=A,o?(this.method="next",this.next=o.finallyLoc,h):this.complete(i)},complete:function(n,A){if("throw"===n.type)throw n.arg;return"break"===n.type||"continue"===n.type?this.next=n.arg:"return"===n.type?(this.rval=this.arg=n.arg,this.method="return",this.next="end"):"normal"===n.type&&A&&(this.next=A),h},finish:function(n){for(var A=this.tryEntries.length-1;A>=0;--A){var t=this.tryEntries[A];if(t.finallyLoc===n)return this.complete(t.completion,t.afterLoc),D(t),h}},catch:function(n){for(var A=this.tryEntries.length-1;A>=0;--A){var t=this.tryEntries[A];if(t.tryLoc===n){var e=t.completion;if("throw"===e.type){var r=e.arg;D(t)}return r}}throw new Error("illegal catch attempt")},delegateYield:function(n,t,e){return this.delegate={iterator:z(n),resultName:t,nextLoc:e},"next"===this.method&&(this.arg=A),h}},n}(n.exports);try{regeneratorRuntime=A}catch(n){"object"==typeof globalThis?globalThis.regeneratorRuntime=A:Function("r","regeneratorRuntime = r")(A)}},379:n=>{"use strict";var A=[];function t(n){for(var t=-1,e=0;e<A.length;e++)if(A[e].identifier===n){t=e;break}return t}function e(n,e){for(var o={},i=[],a=0;a<n.length;a++){var c=n[a],s=e.base?c[0]+e.base:c[0],d=o[s]||0,l="".concat(s," ").concat(d);o[s]=d+1;var u=t(l),p={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)A[u].references++,A[u].updater(p);else{var m=r(p,e);e.byIndex=a,A.splice(a,0,{identifier:l,updater:m,references:1})}i.push(l)}return i}function r(n,A){var t=A.domAPI(A);return t.update(n),function(A){if(A){if(A.css===n.css&&A.media===n.media&&A.sourceMap===n.sourceMap&&A.supports===n.supports&&A.layer===n.layer)return;t.update(n=A)}else t.remove()}}n.exports=function(n,r){var o=e(n=n||[],r=r||{});return function(n){n=n||[];for(var i=0;i<o.length;i++){var a=t(o[i]);A[a].references--}for(var c=e(n,r),s=0;s<o.length;s++){var d=t(o[s]);0===A[d].references&&(A[d].updater(),A.splice(d,1))}o=c}}},569:n=>{"use strict";var A={};n.exports=function(n,t){var e=function(n){if(void 0===A[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}A[n]=t}return A[n]}(n);if(!e)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");e.appendChild(t)}},216:n=>{"use strict";n.exports=function(n){var A=document.createElement("style");return n.setAttributes(A,n.attributes),n.insert(A,n.options),A}},565:(n,A,t)=>{"use strict";n.exports=function(n){var A=t.nc;A&&n.setAttribute("nonce",A)}},795:n=>{"use strict";n.exports=function(n){var A=n.insertStyleElement(n);return{update:function(t){!function(n,A,t){var e="";t.supports&&(e+="@supports (".concat(t.supports,") {")),t.media&&(e+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(e+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),e+=t.css,r&&(e+="}"),t.media&&(e+="}"),t.supports&&(e+="}");var o=t.sourceMap;o&&"undefined"!=typeof btoa&&(e+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),A.styleTagTransform(e,n,A.options)}(A,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(A)}}}},589:n=>{"use strict";n.exports=function(n,A){if(A.styleSheet)A.styleSheet.cssText=n;else{for(;A.firstChild;)A.removeChild(A.firstChild);A.appendChild(document.createTextNode(n))}}},702:(n,A,t)=>{"use strict";n.exports=t.p+"db385f42e777004d21ac.png"}},n=>{n(n.s=150)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,